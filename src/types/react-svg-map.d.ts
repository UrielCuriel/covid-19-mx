/** Declaration file generated by dts-gen */
declare module "react-svg-map" {
  export class CheckboxSVGMap {
    constructor(e: any);

    handleLocationClick(e: any): void;

    handleLocationKeyDown(e: any): void;

    isLocationSelected(e: any): any;

    render(): any;

    toggleLocation(e: any): any;
  }

  export class RadioSVGMap {
    constructor(e: any);

    componentDidMount(): void;

    getLocationTabIndex(e: any, t: any): any;

    handleLocationClick(e: any): void;

    handleLocationKeyDown(e: any): void;

    isLocationSelected(e: any): any;

    render(): any;

    selectLocation(e: any): void;
  }

  export function SVGMap(e: any): any;

  export namespace CheckboxSVGMap {
    namespace propTypes {
      function className(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function locationClassName(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function map(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function onChange(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function onLocationBlur(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationFocus(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseMove(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOut(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOver(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      namespace className {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.className
        const isRequired: any;
      }

      namespace locationClassName {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.locationClassName
        const isRequired: any;
      }

      namespace map {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.map
        const isRequired: any;
      }

      namespace onChange {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onChange
        const isRequired: any;
      }

      namespace onLocationBlur {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onLocationBlur
        const isRequired: any;
      }

      namespace onLocationFocus {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onLocationFocus
        const isRequired: any;
      }

      namespace onLocationMouseMove {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onLocationMouseMove
        const isRequired: any;
      }

      namespace onLocationMouseOut {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onLocationMouseOut
        const isRequired: any;
      }

      namespace onLocationMouseOver {
        // Circular reference from react_svg_map.CheckboxSVGMap.propTypes.onLocationMouseOver
        const isRequired: any;
      }
    }
  }

  export namespace RadioSVGMap {
    namespace propTypes {
      function className(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function locationClassName(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function map(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function onChange(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function onLocationBlur(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationFocus(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseMove(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOut(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOver(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      namespace className {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.className
        const isRequired: any;
      }

      namespace locationClassName {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.locationClassName
        const isRequired: any;
      }

      namespace map {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.map
        const isRequired: any;
      }

      namespace onChange {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onChange
        const isRequired: any;
      }

      namespace onLocationBlur {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onLocationBlur
        const isRequired: any;
      }

      namespace onLocationFocus {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onLocationFocus
        const isRequired: any;
      }

      namespace onLocationMouseMove {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onLocationMouseMove
        const isRequired: any;
      }

      namespace onLocationMouseOut {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onLocationMouseOut
        const isRequired: any;
      }

      namespace onLocationMouseOver {
        // Circular reference from react_svg_map.RadioSVGMap.propTypes.onLocationMouseOver
        const isRequired: any;
      }
    }
  }

  export namespace SVGMap {
    const defaultProps: {
      className: string;
      locationClassName: string;
      role: string;
    };

    namespace propTypes {
      function className(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function isLocationSelected(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function locationClassName(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function locationRole(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function locationTabIndex(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function map(e: any, t: any, n: any, l: any, a: any, i: any): void;

      function onLocationBlur(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationClick(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationFocus(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationKeyDown(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseMove(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOut(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function onLocationMouseOver(
        e: any,
        t: any,
        n: any,
        l: any,
        a: any,
        i: any
      ): void;

      function role(e: any, t: any, n: any, l: any, a: any, i: any): void;

      namespace className {
        // Circular reference from react_svg_map.SVGMap.propTypes.className
        const isRequired: any;
      }

      namespace isLocationSelected {
        // Circular reference from react_svg_map.SVGMap.propTypes.isLocationSelected
        const isRequired: any;
      }

      namespace locationClassName {
        // Circular reference from react_svg_map.SVGMap.propTypes.locationClassName
        const isRequired: any;
      }

      namespace locationRole {
        // Circular reference from react_svg_map.SVGMap.propTypes.locationRole
        const isRequired: any;
      }

      namespace locationTabIndex {
        // Circular reference from react_svg_map.SVGMap.propTypes.locationTabIndex
        const isRequired: any;
      }

      namespace map {
        // Circular reference from react_svg_map.SVGMap.propTypes.map
        const isRequired: any;
      }

      namespace onLocationBlur {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationBlur
        const isRequired: any;
      }

      namespace onLocationClick {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationClick
        const isRequired: any;
      }

      namespace onLocationFocus {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationFocus
        const isRequired: any;
      }

      namespace onLocationKeyDown {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationKeyDown
        const isRequired: any;
      }

      namespace onLocationMouseMove {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationMouseMove
        const isRequired: any;
      }

      namespace onLocationMouseOut {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationMouseOut
        const isRequired: any;
      }

      namespace onLocationMouseOver {
        // Circular reference from react_svg_map.SVGMap.propTypes.onLocationMouseOver
        const isRequired: any;
      }

      namespace role {
        // Circular reference from react_svg_map.SVGMap.propTypes.role
        const isRequired: any;
      }
    }
  }
}
